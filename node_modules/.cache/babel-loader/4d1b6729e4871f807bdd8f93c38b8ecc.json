{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactfiles\\\\project\\\\src\\\\index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Tym = () => {\n  let tym = new Date().toLocaleTimeString();\n  const state = useState();\n  const [cnt, setCnt] = useState(tym);\n\n  const Change = () => {\n    let tym = new Date().toLocaleTimeString();\n    setCnt(tym);\n  };\n\n  if (new Date().getSeconds() < 61) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 10\n      }\n    }, cnt), /*#__PURE__*/React.createElement(Change, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 10\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, \"not\");\n  }\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tym, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }\n})), document.getElementById(\"root\"));","map":{"version":3,"sources":["E:/reactfiles/project/src/index.js"],"names":["React","useState","ReactDOM","Tym","tym","Date","toLocaleTimeString","state","cnt","setCnt","Change","getSeconds","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAIA,MAAMC,GAAG,GAAC,MAAI;AACX,MAAIC,GAAG,GAAE,IAAIC,IAAJ,GAAWC,kBAAX,EAAT;AACA,QAAMC,KAAK,GAACN,QAAQ,EAApB;AACA,QAAK,CAACO,GAAD,EAAKC,MAAL,IAAaR,QAAQ,CAACG,GAAD,CAA1B;;AAEH,QAAMM,MAAM,GAAC,MAAI;AACd,QAAIN,GAAG,GAAE,IAAIC,IAAJ,GAAWC,kBAAX,EAAT;AACAG,IAAAA,MAAM,CAACL,GAAD,CAAN;AAEF,GAJD;;AAKI,MAAI,IAAIC,IAAJ,GAAWM,UAAX,KAAwB,EAA5B,EAA+B;AAChC,wBAAO,uDACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,GAAL,CADC,eAED,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFC,CAAP;AAGa,GAJZ,MAKG;AACD,wBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAN;AACF;AAIH,CArBD;;AAuBAN,QAAQ,CAACU,MAAT,eACG,uDACD,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADC,CADH,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n\r\n\r\nconst Tym=()=>{\r\n   let tym =new Date().toLocaleTimeString();\r\n   const state=useState();\r\n   const[cnt,setCnt]=useState(tym);\r\n\r\nconst Change=()=>{\r\n   let tym =new Date().toLocaleTimeString();\r\n   setCnt(tym);\r\n   \r\n}\r\n    if (new Date().getSeconds()<61){\r\n   return <>\r\n         <h1>{cnt}</h1>\r\n         <Change />  \r\n            </>}\r\n   else{\r\n      return<h1>not</h1>\r\n   }\r\n \r\n\r\n \r\n}\r\n\r\nReactDOM.render(\r\n   <>\r\n  <Tym />\r\n   </>\r\n ,document.getElementById(\"root\"));"]},"metadata":{},"sourceType":"module"}